#!/bin/bash

#----------------------------------------------------------------------+
#Color picker, usage: printf ${BLD}${CUR}${RED}${BBLU}"Some text"${DEF}|
#---------------------------+--------------------------------+---------+
#        Text color         |       Background color         |         |
#------------+--------------+--------------+-----------------+         |
#    Base    |Lighter\Darker|    Base      | Lighter\Darker  |         |
#------------+--------------+--------------+-----------------+         |
RED='\e[31m'; LRED='\e[91m'; BRED='\e[41m'; BLRED='\e[101m' #| Red     |
GRN='\e[32m'; LGRN='\e[92m'; BGRN='\e[42m'; BLGRN='\e[102m' #| Green   |
YLW='\e[33m'; LYLW='\e[93m'; BYLW='\e[43m'; BLYLW='\e[103m' #| Yellow  |
BLU='\e[34m'; LBLU='\e[94m'; BBLU='\e[44m'; BLBLU='\e[104m' #| Blue    |
MGN='\e[35m'; LMGN='\e[95m'; BMGN='\e[45m'; BLMGN='\e[105m' #| Magenta |
CYN='\e[36m'; LCYN='\e[96m'; BCYN='\e[46m'; BLCYN='\e[106m' #| Cyan    |
GRY='\e[37m'; DGRY='\e[90m'; BGRY='\e[47m'; BDGRY='\e[100m' #| Gray    |
#------------------------------------------------------------+---------+
# Effects                                                              |
#----------------------------------------------------------------------+
DEF='\e[0m'   # Default color and effects                              |
BLD='\e[1m'   # Bold\brighter                                          |
DIM='\e[2m'   # Dim\darker                                             |
CUR='\e[3m'   # Italic font                                            |
UND='\e[4m'   # Underline                                              |
INV='\e[7m'   # Inverted                                               |
COF='\e[?25l' # Cursor Off                                             |
CON='\e[?25h' # Cursor On                                              |
#----------------------------------------------------------------------+
# Text positioning, usage: XY 10 10 "Some text"                        |
XY   () { printf "\e[${2};${1}H${3}";   } #                            |
#----------------------------------------------------------------------+
# Line, usage: line - 10 | line -= 20 | line "word1 word2 " 20         |
line () { printf %.s"${1}" $(seq ${2}); } #                            |
#----------------------------------------------------------------------+

# New project folder name
FOLDER_NAME=$1

# Copy Project
create=$2

GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'

SOURCE="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
PATH_ROOT="$( dirname "$SOURCE" )"

cd $PATH_ROOT

echo -e "$PATH_ROOT"


# Create a project folder if it is not present
#
if [ -d "$FOLDER_NAME" ] ; then
    echo -e "${RED}Папка $FOLDER_NAME существует${NC}\n"
else
    mkdir $FOLDER_NAME
    echo -e "${GREEN}Создана папка $FOLDER_NAME${NC} \n"
fi

# Go to the folder
#
cd ./$FOLDER_NAME

echo "Copying files...";

# ln -s ${SOURCE}/node_modules ${PATH_ROOT}/$FOLDER_NAME

cp -r ${SOURCE}/configs ${PATH_ROOT}/$FOLDER_NAME
cp -r ${SOURCE}/public ${PATH_ROOT}/$FOLDER_NAME
cp -r ${SOURCE}/src ${PATH_ROOT}/$FOLDER_NAME
cp -r ${SOURCE}/typings ${PATH_ROOT}/$FOLDER_NAME
cp -r ${SOURCE}/.browserslistrc ${PATH_ROOT}/$FOLDER_NAME
cp -r ${SOURCE}/.editorconfig ${PATH_ROOT}/$FOLDER_NAME
cp -r ${SOURCE}/.env.example ${PATH_ROOT}/$FOLDER_NAME/.env
cp -r ${SOURCE}/.eslintrc.js ${PATH_ROOT}/$FOLDER_NAME
cp -r ${SOURCE}/.eslint.typescript.js ${PATH_ROOT}/$FOLDER_NAME
cp -r ${SOURCE}/.eslintignore ${PATH_ROOT}/$FOLDER_NAME
cp -r ${SOURCE}/.gitignore ${PATH_ROOT}/$FOLDER_NAME
cp -r ${SOURCE}/.size-limit.js ${PATH_ROOT}/$FOLDER_NAME
cp -r ${SOURCE}/babel-plugin-macros.config.js ${PATH_ROOT}/$FOLDER_NAME
cp -r ${SOURCE}/babel.config.js ${PATH_ROOT}/$FOLDER_NAME
cp -r ${SOURCE}/jest.config.js ${PATH_ROOT}/$FOLDER_NAME
cp -r ${SOURCE}/postcss.config.js ${PATH_ROOT}/$FOLDER_NAME
cp -r ${SOURCE}/lint-staged.config.js ${PATH_ROOT}/$FOLDER_NAME
cp -r ${SOURCE}/package.json ${PATH_ROOT}/$FOLDER_NAME
cp -r ${SOURCE}/tsconfig.build.json ${PATH_ROOT}/$FOLDER_NAME
cp -r ${SOURCE}/tsconfig.jest.json ${PATH_ROOT}/$FOLDER_NAME
cp -r ${SOURCE}/tsconfig.json ${PATH_ROOT}/$FOLDER_NAME

echo -e "Project ${GREEN}$FOLDER_NAME${NC} successfully created"

cd ${PATH_ROOT}/$FOLDER_NAME/

mkdir logs

exit 0
